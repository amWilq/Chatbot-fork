openapi: "3.0.1"
info:
  title: "Chatbot API"
  version: "1.0.0"
servers:
  - url: "https://api.codeperium.io/{basePath}"
    variables:
      basePath:
        default: "v1"
paths:
  /assessments/types:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        assessmentTypeId:
                          type: string
                        name:
                          type: string
                        difficulties:
                          type: array
                          items:
                            type: string
                        format:
                          type: string
              examples:
                Asessment Types:
                  value:
                    items:
                      - assessmentTypeId: "1"
                        name: "quiz"
                        difficulties:
                          - "beginner"
                        format: "multi-choice"
                      - assessmentTypeId: "2"
                        name: "conversation"
                        difficulties:
                          - "beginner"
                          - "intermediate"
                          - "advanced"
                        format: "free text"
                      - assessmentTypeId: "3"
                        name: "quiz"
                        difficulties:
                          - "intermediate"
                          - "advanced"
                        format: "code snippet"

  /assessments/{assessmentTypeName}/{assessmentId}/complete:
    post:
      parameters:
        - name: "assessmentTypeName"
          in: "path"
          required: true
          schema:
            type: "string"
          example: "quiz"
        - name: "assessmentId"
          in: "path"
          required: true
          schema:
            type: "string"
          example: "1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompleteAssessmentRequest"
            examples:
              Complete assessment request:
                value:
                  userId: "1"
                  endTime: "2023-11-12T23:55:00Z"
                  assessmentTypeId: "1"
        required: true
      responses:
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
              example:
                error:
                  message: "Client error"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompleteAssessmentResponse"
              examples:
                Quiz Response:
                  value:
                    status: "ASSESSMENT_COMPLETE_SUCCESS"
                    userId: "1"
                    assessmentId: "1"
                    assessmentTypeId: "1"
                    quiz:
                      answeredQuestions: 1
                      correctAnswers: 0
                      startDifficulty: "beginner"
                      endDifficulty: "beginner"
                      duration: 5
                      questions:
                        - content: "What does the echo statement do in PHP?"
                          answers:
                            - "It returns a value from a function."
                            - "It outputs one or more strings to the screen."
                            - "It sets a variable."
                            - "It terminates the execution of the script."
                          correctAnswer: "It outputs one or more strings to the screen."
                          explanation: "The echo statement in PHP is used to output text to the web page or screen. It's a fundamental part of PHP used for displaying data. Unlike some other language constructs, echo does not return a value but simply sends the specified string(s) to the output buffer."
                          yourAnswer: "It sets a variable."
                          isCorrect: false
                          takenTime: 10
                      feedback: "There is field to improve, keep learning and take a quiz again in a while! See you!"
  /assessments/{assessmentTypeName}/start:
    post:
      parameters:
        - name: "assessmentTypeName"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartAssessmentRequest"
            example:
              userId: "1"
              startTime: "2023-11-11T20:20:00Z"
              duration: 5
              assessmentTypeId: "!"
        required: true
      responses:
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
              example:
                error:
                  message: "Client error"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                  assessmentId:
                    type: string
                  assessmentTypeId:
                    type: string
                  difficulty: 
                    type: string
                  startTime:
                    type: string
                    format: "date-time"
              example:
                status: "ASSESSMENT_START_SUCCESS"
                assessmentId: "1"
                assessmentTypeId: "1"
                difficulty: "beginner"
                startTime: "2023-11-11T20:23:00Z"
  /languages:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        languageId:
                          type: string
                        name:
                          type: string
                        categoriesIds:
                          type: array
                          items:
                            type: string
              example:
                items:
                  - languageId: "1"
                    name: "javascript"
                    categoriesIds:
                      - "1"
                      - "2"
                      - "3"
                  - languageId: "2"
                    name: "PHP"
                    categoriesIds:
                      - "2"
                  - languageId: "3"
                    name: "C#"
                    categoriesIds:
                      - "2"
                      - "5"
                  - languageId: "4"
                    name: "C++"
                    categoriesIds:
                      - "4"
  /languages/category/{categoryId}:
    get:
      parameters:
        - name: "categoryId"
          in: "path"
          required: true
          schema:
            type: "string"
          example: "2"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        languageId:
                          type: string
                        name:
                          type: string
                        categoriesIds:
                          type: array
                          items:
                            type: string
              example:
                items:
                  - languageId: "1"
                    name: "javascript"
                    categoriesIds:
                      - "1"
                      - "2"
                      - "3"
                  - languageId: "2"
                    name: "PHP"
                    categoriesIds:
                      - "2"
                  - languageId: "3"
                    name: "C#"
                    categoriesIds:
                      - "2"
                      - "5"
  /assessments/types/{typeId}:
    get:
      parameters:
        - name: "typeId"
          in: "path"
          required: true
          schema:
            type: "string"
          example: "3"
      responses:
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
              example:
                error:
                  message: "Client error"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  assessmentTypeId: 
                    type: string
                  name:
                    type: string
                  difficulties:
                    type: array
                    items:
                      type: string
                  format:
                    type: string
              example:
                assessmentTypeId: "3"
                name: "find error"
                difficulties:
                  - "intermediate"
                  - "advanced"
  /assessments/{assessmentTypeName}/{assessmentId}:
    post:
      parameters:
        - name: "assessmentTypeName"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "assessmentId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
              example:
                error:
                  message: "Client error"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: '#/compnents/schemas/AssessmentRequest'
              example:
                status: "QUESTION_QUIZ_SUCCESS"
                languageId: "1"
                difficulty: "beginner"
                quiz: 
                  question:
                    content: "What does the echo statement do in PHP?"
                    answers:
                      - "It returns a value from a function."
                      - "It outputs one or more strings to the screen."
                      - "It sets a variable."
                      - "It terminates the execution of the script."
  /categories/{categoryId}:
    get:
      parameters:
        - name: "categoryId"
          in: "path"
          required: true
          schema:
            type: "string"
          example: "5"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  categoryId:
                    type: string
                  name:
                    type: string
              example:
                categoryId: "5"
                name: "devops"
  /categories:
    get:
      responses:
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
              example:
                error:
                  message: "Client error"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        categoryId: 
                          type: string
                        name:
                          type: string
              example:
                items:
                  - categoryId: "1"
                    name: "frontend"
                  - categoryId: "2"
                    name: "backend"
                  - categoryId: "3"
                    name: "fullstack"
                  - categoryId: "4"
                    name: "cyber security"
                  - categoryId: "5"
                    name: "devops"

components:
  schemas:
    ClientError:
      title: "ClientError"
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
    StartAssessmentRequest:
      title: "StartAssessment"
      required:
        - "assessmentTypeId"
        - "duration"
        - "startTime"
        - "userId"
      type: "object"
      properties:
        userId:
          minLength: 1
          type: "string"
        startTime:
          minLength: 1
          type: "string"
          format: "date-time"
        duration:
          minimum: 5
          type: "number"
        assessmentTypeId:
          minLength: 1
          type: "string"
    CompleteAssessmentRequest:
      title: "CompleteAssessment"
      required:
        - "assessmentTypeId"
        - "endTime"
        - "userId"
      type: "object"
      properties:
        userId:
          minLength: 1
          type: "string"
        endTime:
          minLength: 1
          type: "string"
          format: "date-time"
        assessmentTypeId:
          minLength: 1
          type: "string"
    AssessmentRequest:
      title: "AssessmentRequest"
      type: object
      properties:
        assessmentTypeId: 
          type: string
        assessmentId:
          type: string
        userId:
          type: string
        requestType:
          type: string
        languageId:
          type: string
        schema:
          oneOf:
            - $ref: '#/compnents/schemas/AssessmentQuestionRequest'
            - $ref: '#/compnents/schemas/AssessmentAnswerRequest'
          discriminator:
            propertyName: "requestType"
            mapping:
              question: '#/compnents/schemas/AssessmentQuestionRequest'
              answer: '#/compnents/schemas/AssessmentAnswerRequest'
    AssessmentQuestionRequest:
      title: "AssessmentQuestion"
      type: object
      properties:
        format:
          type: string
        difficulty:
          type: string
    AssessmentAnswerRequest:
      title: "AssessmentAnswer"
      type: object
      oneOf:
        - type: object
          properties:
            answer:
              type: string
            takenTime:
              type: string
        - type: object
          properties:
            userInput: 
              type: string
            skillLevel:
              type: string
        - type: object
          properties:
            answer:
              type: string
            skillLevel:
              type: string
      discriminator:
        propertyName: "assessmentTypeId"
        mapping:
          1: "#/compnents/schemas/Option1"
          2: "#/compnents/schemas/Option2"
          3: "#/compnents/schemas/Option3"
    CompleteAssessmentResponse:
      title: "CompleteAssessment"
      type: object
      properties:
        status:
          type: string
        userId: 
          type: string
        assessmentId:
          type: string
        assessmentTypeId:
          type: string
        assessmentTypeName:
          oneOf:
            - $ref: '#/compnents/schemas/CompleteQuizResponse'
          discriminator:
            propertyName: "assessmentTypeId"
            mapping:
              1: '#/compnents/schemas/CompleteQuizResponse'
    CompleteQuizResponse:
      title: "CompleteQuiz"
      type: object
      properties:
        answeredQuestions:
          type: number
        correctAnswers: 
          type: number
        startDifficulty:
          type: string
        endDifficulty:
          type: string
        duration: 
          type: number
        questions:
          type: array
          items: 
            type: object
            properties:
              content: 
                type: string
              answers: 
                type: array
                items:
                  type: string
              correctAnswer:
                type: string
              explanation: 
                type: string
              yourAnswer:
                type: string
              isCorrect:
                type: boolean
              takenTime:
                type: number
        feedback:
          type: string